"use strict";
/// <reference types="cypress" />
Object.defineProperty(exports, "__esModule", { value: true });
var setAxeRuleset_1 = require("./commands/setAxeRuleset");
var setAxeCustom_1 = require("./commands/setAxeCustom");
var setAxeSource_1 = require("./commands/setAxeSource");
var axeAnalyze_1 = require("./commands/axeAnalyze");
var isAxeClean_1 = require("./commands/isAxeClean");
var setAxeReportName_1 = require("./commands/setAxeReportName");
var getAxeResults_1 = require("./commands/getAxeResults");
// @see https://docs.cypress.io/guides/tooling/typescript-support#Adding-child-or-dual-commands
Cypress.Commands.add('accessibleName', { prevSubject: 'element' }, function (subject) {
    cy.window({ log: false }).then(function (win) {
        win.axe._tree = win.axe.utils.getFlattenedTree(win.document.body);
        return win.axe.commons.text.accessibleText(subject);
    });
});
Cypress.Commands.add('isAxeClean', isAxeClean_1.isAxeClean);
Cypress.Commands.add('axeAnalyze', axeAnalyze_1.axeAnalyze);
Cypress.Commands.add('setAxeSource', setAxeSource_1.setAxeSource);
Cypress.Commands.add('setAxeCustom', setAxeCustom_1.setAxeCustom);
Cypress.Commands.add('setAxeRuleset', setAxeRuleset_1.setAxeRuleset);
Cypress.Commands.add('getAxeResults', getAxeResults_1.getAxeResults);
Cypress.Commands.add('setAxeReportName', setAxeReportName_1.setAxeReportName);
//# sourceMappingURL=index.js.map